dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.52)

AC_INIT([gnome-system-monitor], [2.13.92],
        [http://bugzilla.gnome.org/enter_bug.cgi?product=system-monitor])
AC_CONFIG_SRCDIR(configure.in)
AC_CONFIG_HEADERS(config.h)

AM_INIT_AUTOMAKE
AC_SUBST(ACLOCAL_AMFLAGS, [\${ACLOCAL_FLAGS}])

AM_PROG_LIBTOOL

AC_PROG_INTLTOOL

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
GNOME_COMPILE_WARNINGS

GLIB_REQUIRED=2.9.1
LIBGNOME_REQUIRED=2.0.0
LIBGNOMEUI_REQUIRED=2.0.0
GCONF_REQUIRED=1.1.5
LIBWNCK_REQUIRED=2.5.0
LIBGTOP_REQUIRED=2.13.0
GTK_REQUIRED=2.8.0
GNOME_VFS_REQUIRED=2.6.0
# LIBGKSUUI_REQUIRED=0.15.0
LIBGKSU_REQUIRED=0.15.0

PKG_CHECK_MODULES(PROCMAN, glib-2.0 >= $GLIB_REQUIRED libgnome-2.0 >= $LIBGNOME_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED gconf-2.0 >= $GCONF_REQUIRED libgtop-2.0 >= $LIBGTOP_REQUIRED libwnck-1.0 >= $LIBWNCK_REQUIRED gtk+-2.0 >= $GTK_REQUIRED gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED)


AC_ARG_ENABLE(more-warnings,
[AC_HELP_STRING([--enable-more-warnings], [Maximum compiler warnings])],
set_more_warnings="$enableval",[
    set_more_warnings=yes
])
AC_MSG_CHECKING(for more warnings, including -Werror)
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
    AC_MSG_RESULT(yes)
    CFLAGS="\
    -Wall \
    -Winline \
    -Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
    -Wnested-externs -Wpointer-arith \
    -Wcast-align -Wsign-compare \
    -std=gnu89 \
    $CFLAGS"

    for option in -Wno-strict-aliasing -Wno-sign-compare; do
        SAVE_CFLAGS="$CFLAGS"
        CFLAGS="$CFLAGS $option"
        AC_MSG_CHECKING([whether gcc understands $option])
        AC_TRY_COMPILE([], [],
            has_option=yes,
            has_option=no,)
        if test $has_option = no; then
            CFLAGS="$SAVE_CFLAGS"
        fi
        AC_MSG_RESULT($has_option)
        unset has_option
        unset SAVE_CFLAGS
    done
    unset option
else
    AC_MSG_RESULT(no)
fi


AM_GCONF_SOURCE_2

dnl Add the languages which your application supports here.
ALL_LINGUAS="am ar az be bg bn bs ca cs cy da de el en_CA en_GB es et eu fa fi fr ga gl gu he hi hr hu id it ja ko li lt lv mk ml mn ms nb ne nl no pa pl pt pt_BR ro ru rw sk sl sq sr sr@Latn sv ta th tr ug uk vi zh_CN zh_HK zh_TW"

GETTEXT_PACKAGE=gnome-system-monitor
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",
                   [The gettext catalog name])
AM_GLIB_GNU_GETTEXT

dnl Set PACKAGE_LOCALE_DIR in config.h.
GLIB_DEFINE_LOCALEDIR(PACKAGE_LOCALE_DIR)

AC_ARG_ENABLE(selinux, AC_HELP_STRING(--enable-selinux,enable SELinux support),enable_selinux=$enableval, enable_selinux=auto)


# SELinux detection
if test x$enable_selinux = xno ; then
    have_selinux=no;
else
    # See if we have SELinux library
    AC_CHECK_LIB(selinux, is_selinux_enabled, 
                 have_selinux=yes, have_selinux=no)
	
    if test x$enable_selinux = xauto ; then
        if test x$have_selinux = xno ; then
                AC_MSG_WARN([Sufficiently new SELinux library not found])
        fi
    else 
        if test x$have_selinux = xno ; then
                AC_MSG_ERROR([SElinux explicitly required, and SELinux library not found])
        fi
    fi
fi

AM_CONDITIONAL(HAVE_SELINUX, test x$have_selinux = xyes)

if test x$have_selinux = xyes ; then
    SELINUX_LIBS=-lselinux
    AC_DEFINE(HAVE_SELINUX,1,[SELinux support])
else
    SELINUX_LIBS=
fi

AC_SUBST(SELINUX_LIBS)



AC_ARG_ENABLE(libgksu, AC_HELP_STRING(--enable-libgksu, enable libgksu support), \
		       enable_libgksu=$enableval, enable_libgksu=auto)

# SELinux detection
if test x$enable_libgksu = xno ; then
    have_libgksu=no;
else
    PKG_CHECK_MODULES(LIBGKSU, libgksu1.2 >= $LIBGKSU_REQUIRED, have_libgksu=yes, have_libgksu=no)
fi

AM_CONDITIONAL(ENABLE_LIBGKSU, test x$have_libgksu = xyes, [Define to enable libgksu support])

if test x$have_libgksu = xyes ; then
    AC_DEFINE(HAVE_LIBGKSU, 1, [Define to enable libgksu support])
else
    LIBGKSU_CFLAGS=
    LIBGKSU_LIBS=
fi

AC_SUBST(LIBGKSU_CFLAGS)
AC_SUBST(LIBGKSU_LIBS)


AC_CONFIG_FILES([
Makefile
src/Makefile
po/Makefile.in
help/Makefile
help/C/Makefile
gnome-system-monitor.desktop.in
])

AC_OUTPUT

echo "

Configuration:

        Source code location:      ${srcdir}
        Compiler:                  ${CC}
	Building SELinux support:  ${have_selinux}
	Building gksu support:     ${have_libgksu}
"
